# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import *
from PyQt6.QtGui import *
from arabic_reshaper import ArabicReshaper
from bidi.algorithm import get_display
import pyperclip as pc
from persiantools import digits
from deep_translator import GoogleTranslator as ts
import webbrowser
import urllib.request
import os
#texts========================================================================
Farsinevisi_copyShod="<html><head/><body><p align=\"right\"><span style=\" color:#0000ff;\">!</span><span style=\" color:#aa0000;\">فارسی‌نویسی</span><span style=\" color:#000000;\">-</span><span style=\" color:#0000ff;\">کپی شد</span></p></body></html>"
FarsinevisiAnjamShod="<html><head/><body><p align=\"right\"><span style=\" color:#aa0000;\">!فارسی‌نویسی انجام شد</span></p></body></html>"
TrtoFaText="<html><head/><body><p align=\"right\"><span style=\" font-size:10pt; color:#00aa00;\">! ترجمه شد</span></p><p align=\"right\"><span style=\" color:#aa0003;\">!فارسی‌نویسی شد</span></p><p align=\"right\"><span style=\" font-size:10pt; color:#0000ff;\">!کپی شد</span></p></body></html>"
FarsinevisiShod="<html><head/><body><p align=\"right\"><span style=\" color:#aa0003;\">!فارسی‌نویسی شد</span></p><p align=\"right\"></p></body></html>"
Tarjome_Copyshod="<html><head/><body><p align=\"right\"><span style=\" color:#0000ff;\">!</span><span style=\" color:#00aa00;\">ترجمه </span><span style=\" color:#000000;\">-</span><span style=\" color:#0000ff;\">کپی شد</span></p></body></html>"
TarjomeShod="<html><head/><body><p align=\"right\"><span style=\" color:#00aa00;\">!ترجمه شد </span></p></body></html>"
TrCopyshod="<html><head/><body><p align=\"right\"><span style=\" color:#0000ff;\">!</span><span style=\" color:#0000ff;\">کپی شد</span></p></body></html>"
Textnet="<html><head/><body><p align=\"right\"><span style=\" color:#aa0003;\">!اینترنت متصل نیست</span></p></body></html>"
FarsinevisiShod_CopyShod="<html><head/><body><p align=\"right\"></p><p align=\"right\"><span style=\" color:#aa0003;\">!فارسی‌نویسی شد </span></p><p align=\"right\"><span style=\" font-size:10pt; color:#0000ff;\">!کپی شد</span></p></body></html>"
Rastchin="<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\np, li { white-space: pre-wrap; }\nhr { height: 1px; border-width: 0; }\n</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n<p align=\"right\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"
Vasatchin="<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }hr { height: 1px; border-width: 0; }</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; font-weight:400; font-style:normal;\"><p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"
Chapchin="<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }hr { height: 1px; border-width: 0; }</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"
#reshaperSeting===============================================================
reshaper = ArabicReshaper(configuration={'delete_harakat': False})
#InternetConnection=====================================================================
def connect():
    try:
        urllib.request.urlopen('https://translate.google.com')
        return True
    except:
        return False
def testConnection():
    if connect()==True:
        ui.lblTrStatus.setText("")
        ui.cmbAz.setDisabled(False)
        ui.cmbBe.setDisabled(False)
        ui.btnTrClPrCp.setDisabled(False)
        ui.btnTrCp.setDisabled(False)
        ui.btnTrPrCp.setDisabled(False)
        ui.btnTrPr.setDisabled(False)
        ui.btnXChange.setDisabled(False)
        ui.btnPrAll.setDisabled(False)
        ui.txtTranslate.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse|QtCore.Qt.TextInteractionFlag.TextEditable)
        ui.btnRefresh.setHidden(True)
    else:
        ui.lblTrStatus.setText(Textnet)
        ui.cmbAz.setDisabled(True)
        ui.cmbBe.setDisabled(True)
        ui.btnTrClPrCp.setDisabled(True)
        ui.btnTrCp.setDisabled(True)
        ui.btnTrPrCp.setDisabled(True)
        ui.btnTrPr.setDisabled(True)
        ui.btnXChange.setDisabled(True)
        ui.btnPrAll.setDisabled(True)
        ui.txtTranslate.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
        ui.btnRefresh.setHidden(False)
#IconPath=====================================================================
basedir = os.path.dirname(__file__)
try:
    from ctypes import windll  # Only exists on Windows.
    myappid = 'mycompany.myproduct.subproduct.version'
    windll.shell32.SetCurrentProcessExplicitAppUserModelID(myappid)
except ImportError:
    pass
#deftxtClear==================================================================
def txtClear():
        ui.txtInput.clear()
        ui.txtTranslate.clear()
        ui.txtFarsinevis.clear()
        ui.txtTranslate.setHtml(Rastchin)
        ui.txtInput.setHtml(Rastchin)
        ui.txtFarsinevis.setHtml(Rastchin)
        
#defChinesh===================================================================
def Chinesh(f): #set Align for txtInput
        #normalsSymbols
        iconR=QIcon()
        iconR.addPixmap(QPixmap(os.path.join(basedir,'Right.png')),QIcon.Mode.Normal)
        iconC=QIcon()
        iconC.addPixmap(QPixmap(os.path.join(basedir,'Center.png')),QIcon.Mode.Normal)
        iconL=QIcon()
        iconL.addPixmap(QPixmap(os.path.join(basedir,'Left.png')),QIcon.Mode.Normal)
        #BoldSymbols
        iconRb=QIcon()
        iconRb.addPixmap(QPixmap(os.path.join(basedir,'RightBold.png')),QIcon.Mode.Normal)
        iconCb=QIcon()
        iconCb.addPixmap(QPixmap(os.path.join(basedir,'CenterBold.png')),QIcon.Mode.Normal)
        iconLb=QIcon()
        iconLb.addPixmap(QPixmap(os.path.join(basedir,'LeftBold.png')),QIcon.Mode.Normal)
        a=ui.txtInput.toPlainText()
        if f=="R": #align Right
                if str(a)!="":
                        ui.txtInput.setHtml("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }hr { height: 1px; border-width: 0; }</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; font-weight:400; font-style:normal;\"><p align=\"right\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">%s</p></body></html>"%(a,))
                elif str(a)=="":
                        ui.txtInput.setHtml(Rastchin)
                ui.btnRastChin.setIcon(iconRb)
                ui.btnVasatChin.setIcon(iconC)
                ui.btnChapChin.setIcon(iconL)
        elif f=="L": #align Left
                if str(a)!="":
                        ui.txtInput.setHtml("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http:/www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><metacharset=\"utf-8\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }hr { height: 1px; border-width: 0; }</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; fontweight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; marginright:0px; -qt-block-indent:0; text-indent:0px;\">%s</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px;margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br ></p></body></html>"%(a,))
                elif str(a)=="":
                        ui.txtInput.setHtml(Chapchin)
                ui.btnRastChin.setIcon(iconR)
                ui.btnVasatChin.setIcon(iconC)
                ui.btnChapChin.setIcon(iconLb)
        else: #align Center
                if str(a)!="":
                        ui.txtInput.setHtml("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http:/www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><metacharset=\"utf-8\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }hr { height: 1px; border-width: 0; }</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; fontweight:400; font-style:normal;\"><p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">%s</p><body></html>"%(a,))
                elif str(a)=="":
                        ui.txtInput.setHtml(Vasatchin)
                ui.btnRastChin.setIcon(iconR)
                ui.btnVasatChin.setIcon(iconCb)
                ui.btnChapChin.setIcon(iconL)
#defFarsinevis================================================================
def harakatTrue(): #set harakat for Farsinevis
   global reshaper
   reshaper = ArabicReshaper(configuration={'delete_harakat': False})
    
def harakatFales(): #delete harakat for Farsinevis
   global reshaper
   reshaper = ArabicReshaper(configuration={'delete_harakat': True})
    
global i1
i1=""
def faProcessInput(f): #do farsinevis
        global i1
        a=ui.txtInput.toPlainText()
        if i1==0:
                pass
        elif i1==1:
                a=digits.en_to_fa(a)
        elif i1==2:
                a=digits.en_to_fa(a)
                a=digits.fa_to_ar(a)
        else:
                pass
        a=get_display(reshaper.reshape(a))
        ui.txtFarsinevis.setPlainText(a)
        if f==1:
                ui.lblFaStatus.setText(FarsinevisiAnjamShod)
        
def faPstCbCopyFa(): #Paste from ClipBoard to txtInput, Farsinevis it and Copy it
        ui.txtInput.setPlainText(pc.paste())
        faProcessInput(0)
        pc.copy(ui.txtFarsinevis.toPlainText())
        ui.lblFaStatus.setText(Farsinevisi_copyShod)

def faOnlyFaCopy():  #only farsinevis and copy Farsinevis text
        faProcessInput(0)
        pc.copy(ui.txtFarsinevis.toPlainText())
        ui.lblFaStatus.setText(Farsinevisi_copyShod)
#defTranslate=============================================================
t = ts()
langDict = t.get_supported_languages(as_dict=True)
langList = t.get_supported_languages()
frm="auto"
to="fa"
def trSystem(txt): #for Translating lblAz and lblBe to Farsi
        return ts(source="en", target="fa").translate(txt)
def translating(f): #for Translating txtInput
        try:
                global frm,to
                ui.txtTranslate.setPlainText(ts(source=frm, target=to).translate(ui.txtInput.toPlainText()))
        except:
                testConnection()
        if f==1:
                ui.lblTrStatus.setText(TarjomeShod)
def trPstCbCopy(f): #Paste from ClipBoard to txtInput, translate it and Copy it
        ui.txtInput.setPlainText(pc.paste())
        translating(0)
        if f==1: #Its For btntrPstCbCopy
                pc.copy(ui.txtTranslate.toPlainText())
                ui.lblTrStatus.setText(Tarjome_Copyshod)
        else: #its for btnAll
                pass

def trOnlyFaCopy(f): #Translate txtInput and copy if f==0 ,only copy Text from txtTranslate if f ==1
        if f==0: #do Translating
                translating(0)
                ui.lblTrStatus.setText(Tarjome_Copyshod)
        else: #dont Translating
                ui.lblTrStatus.setText(TrCopyshod)
        pc.copy(ui.txtTranslate.toPlainText())
def xChangeBtn(): #This is for btnXChange can changing between two Language
        global frm,to
        if ui.cmbAz.currentText()!="DetectLang":
                a=frm
                frm=to
                to=a
                b=ui.cmbAz.currentText()
                ui.cmbAz.setCurrentText(ui.cmbBe.currentText())
                ui.cmbBe.setCurrentText(b)
                ui.btnXChange.setDisabled(False)
        else :
                ui.btnXChange.setDisabled(True)
                
#defTrtoFa================================================================
def trFaProcessInput(f):
        global i1
        a=ui.txtTranslate.toPlainText()
        if i1==0:
                pass
        elif i1==1:
                a=digits.en_to_fa(a)
        elif i1==2:
                a=digits.en_to_fa(a)
                a=digits.fa_to_ar(a)
        else:
                pass
        a=get_display(reshaper.reshape(a))
        ui.txtFarsinevis.setPlainText(a)
        if f==1:
                ui.lblTrFaStatus.setText(FarsinevisiShod)
def trFaOnlyFaCopy(f):  
        trFaProcessInput(0)
        pc.copy(ui.txtFarsinevis.toPlainText())
        if f==1: #its for btntrFaPrcp
                ui.lblTrFaStatus.setText(FarsinevisiShod_CopyShod)
        else: #its for btnAll
                pass
#defAllBtn====================================================================
def allBtn():
        trPstCbCopy(0)
        trFaOnlyFaCopy(0)
        ui.lblTrFaStatus.setText(TrtoFaText)
#UI===========================================================================
class Ui_Translate(object):
    def setupUi(self, Translate):
        Translate.setObjectName("Translate")
        Translate.resize(1125, 710)
        Translate.setMinimumSize(QtCore.QSize(1125, 710))
        Translate.setMaximumSize(QtCore.QSize(1125, 710))
        self.centralwidget = QtWidgets.QWidget(Translate)
        self.centralwidget.setObjectName("centralwidget")
#===========================================================================lblFaStatus
        self.lblFaStatus = QtWidgets.QLabel(self.centralwidget)
        self.lblFaStatus.setEnabled(True)
        self.lblFaStatus.setGeometry(QtCore.QRect(350, 320, 141, 16))
        font = QtGui.QFont()
        font.setBold(True)
        self.lblFaStatus.setFont(font)
        self.lblFaStatus.setObjectName("lblFaStatus")
#===========================================================================txtInput
        self.txtInput = QtWidgets.QTextEdit(self.centralwidget)
        self.txtInput.setGeometry(QtCore.QRect(13, 20, 1101, 221))
        self.txtInput.setObjectName("txtInput")
#===========================================================================cmbAz
        self.cmbAz = QtWidgets.QComboBox(self.centralwidget)
        self.cmbAz.setGeometry(QtCore.QRect(920, 270, 91, 22))
        self.cmbAz.setEditable(True)
        self.cmbAz.setObjectName("cmbAz")
        self.cmbAz.addItem("DetectLang")
        for i in langList:
                self.cmbAz.addItem(str(i).capitalize())
        self.cmbAz.currentTextChanged.connect(self.comboAz)
#===========================================================================btnPrAll
        self.btnPrAll = QtWidgets.QPushButton(self.centralwidget)
        self.btnPrAll.setGeometry(QtCore.QRect(510, 250, 101, 91))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        self.btnPrAll.setFont(font)
        self.btnPrAll.setObjectName("btnPrAll")
        self.btnPrAll.clicked.connect(lambda:allBtn())
#===========================================================================btnTrPr
        self.btnTrPr = QtWidgets.QPushButton(self.centralwidget)
        self.btnTrPr.setGeometry(QtCore.QRect(690, 270, 75, 24))
        self.btnTrPr.setObjectName("btnTrPr")
        self.btnTrPr.clicked.connect(lambda:translating(1))
#===========================================================================lblTrStatus
        self.lblTrStatus = QtWidgets.QLabel(self.centralwidget)
        self.lblTrStatus.setEnabled(True)
        self.lblTrStatus.setGeometry(QtCore.QRect(960, 320, 141, 16))
        font = QtGui.QFont()
        font.setBold(True)
        self.lblTrStatus.setFont(font)
        self.lblTrStatus.setObjectName("lblTrStatus")
#===========================================================================cmbAdad
        self.cmbAdad = QtWidgets.QComboBox(self.centralwidget)
        self.cmbAdad.setGeometry(QtCore.QRect(338, 290, 71, 22))
        self.cmbAdad.setEditable(False)
        self.cmbAdad.setObjectName("cmbAdad")
        self.cmbAdad.addItem("")
        self.cmbAdad.addItem("")
        self.cmbAdad.addItem("")
        self.cmbAdad.currentIndexChanged.connect(self.comboAdadTabdil)
#===========================================================================btnFaTrCp
        self.btnFaTrCp = QtWidgets.QPushButton(self.centralwidget)
        self.btnFaTrCp.setGeometry(QtCore.QRect(520, 400, 81, 41))
        self.btnFaTrCp.setObjectName("btnFaTrCp")
        self.btnFaTrCp.clicked.connect(lambda:trFaOnlyFaCopy(1))
#===========================================================================btnXChange
        self.btnXChange = QtWidgets.QPushButton(self.centralwidget)
        self.btnXChange.setGeometry(QtCore.QRect(884, 270, 31, 51))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.btnXChange.setFont(font)
        self.btnXChange.setObjectName("btnXChange")
        self.btnXChange.clicked.connect(lambda:xChangeBtn())
#===========================================================================txtTranslate
        self.txtTranslate = QtWidgets.QTextEdit(self.centralwidget)
        self.txtTranslate.setGeometry(QtCore.QRect(610, 340, 501, 351))
        self.txtTranslate.setObjectName("txtTranslate")
#===========================================================================btnTrClPrCp
        self.btnTrClPrCp = QtWidgets.QPushButton(self.centralwidget)
        self.btnTrClPrCp.setGeometry(QtCore.QRect(770, 270, 111, 51))
        self.btnTrClPrCp.setObjectName("btnTrClPrCp")
        self.btnTrClPrCp.clicked.connect(lambda:trPstCbCopy(1))
#===========================================================================cbHarakak
        self.cbHarakak = QtWidgets.QCheckBox(self.centralwidget)
        self.cbHarakak.setGeometry(QtCore.QRect(250, 290, 76, 20))
        self.cbHarakak.setChecked(True)
        self.cbHarakak.setTristate(False)
        self.cbHarakak.setObjectName("cbHarakak")
        self.cbHarakak.stateChanged.connect(self.checkBoxharekat)
#===========================================================================btnClear
        self.btnClear = QtWidgets.QPushButton(self.centralwidget)
        self.btnClear.setGeometry(QtCore.QRect(520, 350, 81, 41))
        self.btnClear.setObjectName("btnClear")
        self.btnClear.clicked.connect(lambda:txtClear())
#===========================================================================lblTabdilAdad
        self.lblTabdilAdad = QtWidgets.QLabel(self.centralwidget)
        self.lblTabdilAdad.setGeometry(QtCore.QRect(410, 290, 61, 20))
        self.lblTabdilAdad.setObjectName("lblTabdilAdad")
#===========================================================================lblBe
        self.lblBe = QtWidgets.QLabel(self.centralwidget)
        self.lblBe.setGeometry(QtCore.QRect(1020, 300, 80, 20))
        self.lblBe.setObjectName("lblBe")
#===========================================================================btnFaPrCp
        self.btnFaPrCp = QtWidgets.QPushButton(self.centralwidget)
        self.btnFaPrCp.setGeometry(QtCore.QRect(30, 270, 75, 24))
        self.btnFaPrCp.setObjectName("btnFaPrCp")
        self.btnFaPrCp.clicked.connect(lambda:faOnlyFaCopy())
#===========================================================================cmbBe
        self.cmbBe = QtWidgets.QComboBox(self.centralwidget)
        self.cmbBe.setGeometry(QtCore.QRect(920, 300, 91, 22))
        self.cmbBe.setEditable(True)
        self.cmbBe.setObjectName("cmbBe")
        for i in langList:
                self.cmbBe.addItem(str(i).capitalize())
        self.cmbBe.setCurrentText("Persian")
        self.cmbBe.currentTextChanged.connect(self.comboBe)
#===========================================================================btnFaPr
        self.btnFaPr = QtWidgets.QPushButton(self.centralwidget)
        self.btnFaPr.setGeometry(QtCore.QRect(30, 300, 75, 24))
        self.btnFaPr.setObjectName("btnFaPr")
        self.btnFaPr.clicked.connect(lambda:faProcessInput(1))
#===========================================================================btnTrPrCp
        self.btnTrPrCp = QtWidgets.QPushButton(self.centralwidget)
        self.btnTrPrCp.setGeometry(QtCore.QRect(690, 300, 75, 24))
        self.btnTrPrCp.setObjectName("btnTrPrCp")
        self.btnTrPrCp.clicked.connect(lambda:trOnlyFaCopy(0))
#===========================================================================btnTrCp
        self.btnTrCp = QtWidgets.QPushButton(self.centralwidget)
        self.btnTrCp.setGeometry(QtCore.QRect(640, 270, 41, 51))
        self.btnTrCp.setObjectName("btnTrCp")
        self.btnTrCp.clicked.connect(lambda:trOnlyFaCopy(1))
#===========================================================================lblAz
        self.lblAz = QtWidgets.QLabel(self.centralwidget)
        self.lblAz.setGeometry(QtCore.QRect(1020, 270, 80, 20))
        self.lblAz.setObjectName("lblAz")
#===========================================================================lblInput
        self.lblInput = QtWidgets.QLabel(self.centralwidget)
        self.lblInput.setGeometry(QtCore.QRect(1050, 0, 49, 16))
        self.lblInput.setObjectName("lblInput")
#===========================================================================lblTrranslate
        self.lblTrranslate = QtWidgets.QLabel(self.centralwidget)
        self.lblTrranslate.setGeometry(QtCore.QRect(1050, 250, 49, 16))
        self.lblTrranslate.setObjectName("lblTrranslate")
#===========================================================================btnFaClPrCp
        self.btnFaClPrCp = QtWidgets.QPushButton(self.centralwidget)
        self.btnFaClPrCp.setGeometry(QtCore.QRect(110, 270, 111, 51))
        self.btnFaClPrCp.setObjectName("btnFaClPrCp")
        self.btnFaClPrCp.clicked.connect(lambda:faPstCbCopyFa())
#===========================================================================txtFarsinevis
        self.txtFarsinevis = QtWidgets.QTextEdit(self.centralwidget)
        self.txtFarsinevis.setGeometry(QtCore.QRect(10, 340, 501, 351))
        self.txtFarsinevis.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
        self.txtFarsinevis.setObjectName("txtFarsinevis")
#===========================================================================lblFarsinevis
        self.lblFarsinevis = QtWidgets.QLabel(self.centralwidget)
        self.lblFarsinevis.setGeometry(QtCore.QRect(440, 250, 61, 20))
        self.lblFarsinevis.setObjectName("lblFarsinevis")
#===========================================================================btnTrtoFa
        self.btnTrtoFa = QtWidgets.QPushButton(self.centralwidget)
        self.btnTrtoFa.setGeometry(QtCore.QRect(520, 450, 81, 31))
        self.btnTrtoFa.setObjectName("btnTrtoFa")
        self.btnTrtoFa.clicked.connect(lambda:trFaProcessInput(1))
#===========================================================================lblTrFaStatus
        self.lblTrFaStatus = QtWidgets.QLabel(self.centralwidget)
        self.lblTrFaStatus.setEnabled(True)
        self.lblTrFaStatus.setGeometry(QtCore.QRect(510, 500, 91, 121))
        font = QtGui.QFont()
        font.setBold(True)
        self.lblTrFaStatus.setFont(font)
        self.lblTrFaStatus.setObjectName("lblTrFaStatus")
        Translate.setCentralWidget(self.centralwidget)
#===========================================================================btnRefresh      
        self.btnRefresh = QtWidgets.QPushButton(self.centralwidget)
        self.btnRefresh.setEnabled(True)
        self.btnRefresh.setGeometry(QtCore.QRect(975, 321, 20, 20))
        self.btnRefresh.setObjectName("btnRefresh")
        self.btnRefresh.clicked.connect(lambda:testConnection())
#===========================================================================btnChapChin
        self.btnChapChin = QtWidgets.QPushButton(self.centralwidget)
        self.btnChapChin.setGeometry(QtCore.QRect(10, 0, 21, 21))
        self.btnChapChin.setText("")
        self.btnChapChin.setObjectName("btnChapChin")
        iconL=QIcon()
        iconL.addPixmap(QPixmap(os.path.join(basedir,'Left.png')),QIcon.Mode.Normal)
        self.btnChapChin.setIcon(iconL)
        self.btnChapChin.clicked.connect(lambda:Chinesh('L'))
#===========================================================================btnVasatChin
        self.btnVasatChin = QtWidgets.QPushButton(self.centralwidget)
        self.btnVasatChin.setGeometry(QtCore.QRect(30, 0, 21, 21))
        self.btnVasatChin.setText("")
        self.btnVasatChin.setObjectName("btnVasatChin")
        iconC=QIcon()
        iconC.addPixmap(QPixmap(os.path.join(basedir,'Center.png')),QIcon.Mode.Normal)
        self.btnVasatChin.setIcon(iconC)
        self.btnVasatChin.clicked.connect(lambda:Chinesh('C'))
#===========================================================================btnRastChin
        self.btnRastChin = QtWidgets.QPushButton(self.centralwidget)
        self.btnRastChin.setGeometry(QtCore.QRect(50, 0, 21, 21))
        self.btnRastChin.setText("")
        self.btnRastChin.setObjectName("btnRastChin")
        iconRb=QIcon()
        iconRb.addPixmap(QPixmap(os.path.join(basedir,'RightBold.png')),QIcon.Mode.Normal)
        self.btnRastChin.setIcon(iconRb)
        self.btnRastChin.clicked.connect(lambda:Chinesh('R'))
#===========================================================================menubar
        self.menubar = QtWidgets.QMenuBar(Translate)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1125, 22))
        self.menubar.setObjectName("menubar")
#===========================================================================fileMnu
        self.fileMnu = QtWidgets.QMenu(self.menubar)
        self.fileMnu.setObjectName("fileMnu")
#===========================================================================aboutMnu
        self.aboutMnu = QtWidgets.QMenu(self.menubar)
        self.aboutMnu.setObjectName("aboutMnu")
        Translate.setMenuBar(self.menubar)
#===========================================================================statusbar
        self.statusbar = QtWidgets.QStatusBar(Translate)
        self.statusbar.setObjectName("statusbar")
        Translate.setStatusBar(self.statusbar)
#===========================================================================aFileOpen
        self.aFileOpen = QtGui.QAction(Translate)
        self.aFileOpen.setObjectName("aFileOpen")
        self.aFileOpen.setShortcut("Ctrl+O")
        iconOpenFile=QIcon()
        iconOpenFile.addPixmap(QPixmap(os.path.join(basedir,'OpenFileIcon.png')),QIcon.Mode.Normal)
        self.aFileOpen.setIcon(iconOpenFile)
#===========================================================================aFileSaveAsTr
        self.aFileSaveAsTr = QtGui.QAction(Translate)
        self.aFileSaveAsTr.setObjectName("aFileSaveAsTr")
        self.aFileSaveAsTr.setShortcut("Ctrl+J")
        iconSaveAs=QIcon()
        iconSaveAs.addPixmap(QPixmap(os.path.join(basedir,'SaveAsIcon.png')),QIcon.Mode.Normal)
        self.aFileSaveAsTr.setIcon(iconSaveAs)
#===========================================================================aFileSaveAsFa
        self.aFileSaveAsFa = QtGui.QAction(Translate)
        self.aFileSaveAsFa.setObjectName("aFileSaveAsFa")
        self.aFileSaveAsFa.setShortcut("Ctrl+S")
        self.aFileSaveAsFa.setIcon(iconSaveAs)
#===========================================================================aTeleChnl
        self.aTeleChnl = QtGui.QAction(Translate)
        self.aTeleChnl.setObjectName("aTeleChnl")
        iconTel=QIcon()
        iconTel.addPixmap(QPixmap(os.path.join(basedir,'Telegramlogo.png')),QIcon.Mode.Normal)
        self.aTeleChnl.setIcon(iconTel)
#===========================================================================aYTChnl
        self.aYTChnl = QtGui.QAction(Translate)
        self.aYTChnl.setObjectName("aYTChnl")
        iconYT=QIcon()
        iconYT.addPixmap(QPixmap(os.path.join(basedir,'YouTubelogo.png')),QIcon.Mode.Normal)
        self.aYTChnl.setIcon(iconYT)
#===========================================================================aGithubPage
        self.aGithubPage = QtGui.QAction(Translate)
        self.aGithubPage.setObjectName("aGithubPage")
        iconGit=QIcon()
        iconGit.addPixmap(QPixmap(os.path.join(basedir,'GitHubLogo.png')),QIcon.Mode.Normal)
        self.aGithubPage.setIcon(iconGit)
#===========================================================================fileMnu
        self.fileMnu.addAction(self.aFileOpen)
        self.fileMnu.addAction(self.aFileSaveAsTr)
        self.fileMnu.addAction(self.aFileSaveAsFa)
#===========================================================================aboutMnu
        self.aboutMnu.addAction(self.aTeleChnl)
        self.aboutMnu.addAction(self.aYTChnl)
        self.aboutMnu.addAction(self.aGithubPage)
#===========================================================================menubar
        self.menubar.addAction(self.fileMnu.menuAction())
        self.menubar.addAction(self.aboutMnu.menuAction())
        self.fileMnu.triggered[QtGui.QAction].connect(self.dmenuFiles)
        self.aboutMnu.triggered[QtGui.QAction].connect(self.dmenuAbout)

        self.retranslateUi(Translate)
        QtCore.QMetaObject.connectSlotsByName(Translate)

    def retranslateUi(self, Translate):
        _translate = QtCore.QCoreApplication.translate
        Translate.setWindowTitle(_translate("Translate", "Translator-FarsiNevis"))
        self.btnRefresh.setText(_translate("Translate", "↻"))
        self.lblFaStatus.setText(_translate("Translate", ""))
        self.btnPrAll.setText(_translate("Translate", "وارد کردن از\nکلیپ‌بورد\n+ترجمه\n+فارسی‌نویسی\n+کپی متن خروجی"))
        self.btnTrPr.setText(_translate("Translate", "پردازش"))
        self.lblTrStatus.setText(_translate("Translate", ""))
        self.cmbAdad.setItemText(0, _translate("Translate", "غیر فعال"))
        self.cmbAdad.setItemText(1, _translate("Translate", "به فارسی"))
        self.cmbAdad.setItemText(2, _translate("Translate", "به عربی"))
        self.btnFaTrCp.setText(_translate("Translate", "فارسی‌نویسیِ\nترجمه+کپی"))
        self.btnXChange.setText(_translate("Translate", "⇅"))
        self.txtTranslate.setHtml(_translate("Translate", Rastchin))
        self.btnTrClPrCp.setText(_translate("Translate", "پردازش از کلیپ‌بورد\nکپی خروجی"))
        self.cbHarakak.setText(_translate("Translate", "دارای حرکت"))
        self.btnClear.setText(_translate("Translate", "پاک کردن همه"))
        self.lblTabdilAdad.setText(_translate("Translate", "تبدیل اعداد:"))
        self.lblBe.setText(_translate("Translate", "به: فارسی"))
        self.btnFaPrCp.setText(_translate("Translate", "پردازش/کپی"))
        self.btnFaPr.setText(_translate("Translate", "پردازش"))
        self.btnTrPrCp.setText(_translate("Translate", "پردازش/کپی"))
        self.btnTrCp.setText(_translate("Translate", "کپی\nترجمه"))
        self.lblAz.setText(_translate("Translate", "از: شناسایی زبان"))
        self.lblInput.setText(_translate("Translate", "ورودی:"))
        self.lblTrranslate.setText(_translate("Translate", "ترجمه:"))
        self.btnFaClPrCp.setText(_translate("Translate", "پردازش از کلیپ‌بورد\nکپی خروجی"))
        self.txtFarsinevis.setHtml(_translate("Translate", Rastchin))
        self.txtInput.setHtml(_translate("Translate", Rastchin))
        self.lblFarsinevis.setText(_translate("Translate", "فارسی‌نویس:"))
        self.btnTrtoFa.setText(_translate("Translate", "فارسی‌نویسی"))
        self.lblTrFaStatus.setText(_translate("Translate", ""))
        self.fileMnu.setTitle(_translate("Translate", "فایل"))
        self.aboutMnu.setTitle(_translate("Translate", "درباره ما"))
        self.aFileOpen.setText(_translate("Translate", "TXT یازکردن فایل"))
        self.aFileSaveAsFa.setText(_translate("Translate", "TXTذخیره فارسی نویس به صورت"))
        self.aFileSaveAsTr.setText(_translate("Translate", "TXTذخیره ترجمه به صورت"))
        self.aTeleChnl.setText(_translate("Translate", "کانال تلگرام"))
        self.aYTChnl.setText(_translate("Translate", " کانال یوتیوب"))
        self.aGithubPage.setText(_translate("Translate", "صفحع گیت‌هاب"))
    def checkBoxharekat(self,checked):
        if checked:
            harakatTrue()
        else:
            harakatFales()
    
    def comboAdadTabdil(self):
      global i1 
      i1=self.cmbAdad.currentIndex()
      
    def comboBe(self):
        testConnection()
        global to 
        try:
                to=langDict[(self.cmbBe.currentText()).lower()]
                t1=trSystem(self.cmbBe.currentText())
                self.lblBe.setText(f"به: {t1}")
        except:
                pass
    def comboAz(self):
        testConnection()
        global frm
        x=(self.cmbAz.currentText()).lower()
        if x!="detectlang":
                try:
                        frm=langDict[x]
                        t1=trSystem(self.cmbAz.currentText())
                        self.lblAz.setText(f"از: {t1}")
                        self.btnXChange.setDisabled(False)
                except:
                        pass
        elif x=="detectlang":
                frm="auto"
                self.lblAz.setText("از: شناسایی زبان")
                self.btnXChange.setDisabled(True)
       
    def openfiles(self,f):
      fname = QFileDialog.getOpenFileName(None,f'{f}','Desktop',"Text Document(*.txt)")
      return fname[0]

    def saveFlies(self,f):
      fname = QFileDialog.getSaveFileName(None,f'{f}','New Text Document',"Text Document(*.txt)")
      return fname[0]
    def dmenuFiles(self,q):
      if q.objectName()=="aFileOpen":
       try:
         afile=self.openfiles("باز کردن فایل")
         print(afile)
         s=""
         with open(afile,encoding='utf8') as f:
            for line in f:
               o=line.strip()
               s=s+str(o)+"\n"
         self.txtInput.setPlainText(s)
         f.close()
       except:
          pass
      elif q.objectName()=="aFileSaveAsFa":
       try:
         afile=self.saveFlies("ذخیره در") 
         with open(afile, 'w', encoding='utf-8') as f:
            f.write(self.txtFarsinevis.toPlainText())
       except:
          pass
      elif q.objectName()=="aFileSaveAsTr":
       try:
         afile=self.saveFlies("ذخیره در") 
         with open(afile, 'w', encoding='utf-8') as f:
            f.write(self.txtTranslate.toPlainText())
       except:
          pass
            
            
    def dmenuAbout(self,q):
      if q.objectName()=="aTeleChnl":
         webbrowser.open('https://t.me/sinajet')
      elif q.objectName()=="aYTChnl":
         webbrowser.open('https://www.youtube.com/c/SinaJet')
      elif q.objectName()=="aGithubPage":
         webbrowser.open('https://github.com/sinajet')
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Translate = QtWidgets.QMainWindow()
    app.setWindowIcon(QtGui.QIcon(os.path.join(basedir,'IconTrFa.png')))
    ui = Ui_Translate()
    ui.setupUi(Translate)
    cb=app.clipboard()
    Translate.show()
    testConnection()
    ui.btnXChange.setDisabled(True)
    sys.exit(app.exec())
